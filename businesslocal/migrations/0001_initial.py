# Generated by Django 5.0.9 on 2024-10-20 18:12

import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        ("wagtailcore", "0094_alter_page_locale"),
        ("wagtailimages", "0026_delete_uploadedimage"),
    ]

    operations = [
        migrations.CreateModel(
            name="BusinessLocalIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "subtitle",
                    models.CharField(
                        default="Annuaire d'entreprises locales", max_length=255
                    ),
                ),
                (
                    "summary",
                    models.TextField(
                        blank=True,
                        help_text="Texte affiché en haut de la page",
                        max_length=250,
                    ),
                ),
                ("body", wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="BusinessLocalCategory",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "summary",
                    models.CharField(
                        blank=True, help_text="Résumé de la catégorie", max_length=250
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Mettre cette catégorie en avant"
                    ),
                ),
                (
                    "featured_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="BusinessLocalPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        help_text="Adresse de l'entreprise", max_length=250
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, help_text="Numéro de téléphone", max_length=20
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("website", models.URLField(blank=True)),
                (
                    "body",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="Description complète de l'entreprise"
                    ),
                ),
                (
                    "google_maps_link",
                    models.URLField(blank=True, help_text="Lien Google Maps"),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Mettre cette entreprise en avant"
                    ),
                ),
                (
                    "opening_hours",
                    wagtail.fields.StreamField(
                        [("hours", 6)],
                        blank=True,
                        block_lookup={
                            0: (
                                "wagtail.blocks.ChoiceBlock",
                                [],
                                {
                                    "choices": [
                                        ("monday", "Lundi"),
                                        ("tuesday", "Mardi"),
                                        ("wednesday", "Mercredi"),
                                        ("thursday", "Jeudi"),
                                        ("friday", "Vendredi"),
                                        ("saturday", "Samedi"),
                                        ("sunday", "Dimanche"),
                                    ],
                                    "label": "Jour",
                                },
                            ),
                            1: (
                                "wagtail.blocks.TimeBlock",
                                (),
                                {
                                    "help_text": "Format HH:MM",
                                    "label": "Heure d'ouverture",
                                    "required": False,
                                },
                            ),
                            2: (
                                "wagtail.blocks.TimeBlock",
                                (),
                                {
                                    "help_text": "Format HH:MM",
                                    "label": "Heure de fermeture",
                                    "required": False,
                                },
                            ),
                            3: (
                                "wagtail.blocks.TimeBlock",
                                (),
                                {
                                    "help_text": "Format HH:MM (facultatif)",
                                    "label": "Deuxième créneau d'ouverture",
                                    "required": False,
                                },
                            ),
                            4: (
                                "wagtail.blocks.TimeBlock",
                                (),
                                {
                                    "help_text": "Format HH:MM (facultatif)",
                                    "label": "Deuxième créneau de fermeture",
                                    "required": False,
                                },
                            ),
                            5: (
                                "wagtail.blocks.BooleanBlock",
                                (),
                                {
                                    "help_text": "Cocher si l'entreprise est fermée toute la journée",
                                    "label": "Fermé toute la journée",
                                    "required": False,
                                },
                            ),
                            6: (
                                "wagtail.blocks.StructBlock",
                                [
                                    [
                                        ("day", 0),
                                        ("open_time", 1),
                                        ("close_time", 2),
                                        ("second_open_time", 3),
                                        ("second_close_time", 4),
                                        ("closed", 5),
                                    ]
                                ],
                                {},
                            ),
                        },
                        help_text="Horaires d'ouverture flexibles",
                    ),
                ),
                (
                    "featured_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="BusinessLocalGalleryImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("caption", models.CharField(blank=True, max_length=250)),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gallery_images",
                        to="businesslocal.businesslocalpage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BusinessLocalTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_items",
                        to="businesslocal.businesslocalpage",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_items",
                        to="taggit.tag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="businesslocalpage",
            name="tags",
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="businesslocal.BusinessLocalTag",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
    ]
